[
  {
    "when": "textInputFocus && !editorReadonly",
    "command": "-editor.action.clipboardCutAction",
    "key": "cmd+x"
  },
  {
    "command": "workbench.action.showCommands",
    "key": "cmd+x"
  },
  {
    "command": "-workbench.action.showCommands",
    "key": "alt+x"
  },
  {
    "command": "-workbench.action.closeWindow",
    "key": "shift+cmd+w"
  },
  {
    "when": "!editorIsOpen && !multipleEditorGroups",
    "command": "-workbench.action.closeWindow",
    "key": "cmd+w"
  },
  {
    "when": "editorTextFocus",
    "command": "emacs-mcx.copyRegion",
    "key": "cmd+w"
  },
  {
    "when": "editorTextFocus",
    "command": "-emacs-mcx.copyRegion",
    "key": "alt+w"
  },
  {
    "command": "-actions.find",
    "key": "cmd+f"
  },
  {
    "when": "editorTextFocus",
    "command": "emacs-mcx.forwardWord",
    "key": "cmd+f"
  },
  {
    "when": "editorTextFocus",
    "command": "-emacs-mcx.forwardWord",
    "key": "alt+f"
  },
  {
    "when": "editorFocus && findWidgetVisible",
    "command": "emacs-mcx.executeCommands",
    "key": "cmd+g cmd+g"
  },
  {
    "when": "editorFocus && findWidgetVisible",
    "command": "-emacs-mcx.executeCommands",
    "key": "alt+f"
  },
  {
    "command": "-workbench.action.toggleSidebarVisibility",
    "key": "cmd+b"
  },
  {
    "when": "editorTextFocus",
    "command": "emacs-mcx.backwardWord",
    "key": "cmd+b"
  },
  {
    "when": "editorTextFocus",
    "command": "-emacs-mcx.backwardWord",
    "key": "alt+b"
  },
  {
    "when": "editorFocus && findWidgetVisible",
    "command": "-emacs-mcx.executeCommands",
    "key": "alt+b"
  },
  {
    "when": "editorTextFocus",
    "command": "emacs-mcx.paredit.backwardSexp",
    "key": "ctrl+cmd+b"
  },
  {
    "when": "editorTextFocus",
    "command": "-emacs-mcx.paredit.backwardSexp",
    "key": "ctrl+alt+b"
  },
  {
    "when": "textInputFocus && !editorReadonly",
    "command": "-editor.action.clipboardPasteAction",
    "key": "cmd+v"
  },
  {
    "when": "editorTextFocus && !suggestWidgetVisible",
    "command": "emacs-mcx.scrollDownCommand",
    "key": "cmd+v"
  },
  {
    "when": "editorTextFocus && !suggestWidgetVisible",
    "command": "-emacs-mcx.scrollDownCommand",
    "key": "alt+v"
  },
  {
    "when": "editorTextFocus",
    "command": "emacs-mcx.endOfBuffer",
    "key": "shift+cmd+."
  },
  {
    "when": "editorTextFocus",
    "command": "-emacs-mcx.endOfBuffer",
    "key": "shift+alt+."
  },
  {
    "when": "editorFocus && findWidgetVisible",
    "command": "-emacs-mcx.executeCommands",
    "key": "shift+alt+."
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "-editor.action.inPlaceReplace.up",
    "key": "shift+cmd+,"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "-editor.action.inPlaceReplace.down",
    "key": "shift+cmd+."
  },
  {
    "when": "editorTextFocus",
    "command": "emacs-mcx.beginningOfBuffer",
    "key": "shift+cmd+,"
  },
  {
    "when": "editorTextFocus",
    "command": "-emacs-mcx.beginningOfBuffer",
    "key": "shift+alt+,"
  },
  {
    "when": "editorFocus && findWidgetVisible",
    "command": "-emacs-mcx.executeCommands",
    "key": "shift+alt+,"
  },
  {
    "when": "editorFocus && findWidgetVisible",
    "command": "-emacs-mcx.executeCommands",
    "key": "alt+g alt+g"
  },
  {
    "when": "editorFocus",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "key": "cmd+d"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "emacs-mcx.killWord",
    "key": "cmd+d"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "-emacs-mcx.killWord",
    "key": "alt+d"
  },
  {
    "command": "-extension.runLastSpec",
    "key": "cmd+y"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "emacs-mcx.yank-pop",
    "key": "cmd+y"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "-emacs-mcx.yank-pop",
    "key": "alt+y"
  },
  {
    "command": "-extension.runSpecLine",
    "key": "cmd+l"
  },
  {
    "when": "textInputFocus",
    "command": "-expandLineSelection",
    "key": "cmd+l"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "emacs-mcx.transformToLowercase",
    "key": "cmd+l"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "-emacs-mcx.transformToLowercase",
    "key": "alt+l"
  },
  {
    "when": "textInputFocus",
    "command": "-cursorUndo",
    "key": "cmd+u"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "emacs-mcx.transformToUppercase",
    "key": "cmd+u"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "-emacs-mcx.transformToUppercase",
    "key": "alt+u"
  },
  {
    "when": "textInputFocus && !editorReadonly",
    "command": "-deleteAllLeft",
    "key": "cmd+backspace"
  },
  {
    "when": "breakpointsFocused && !breakpointSelected",
    "command": "-debug.removeBreakpoint",
    "key": "cmd+backspace"
  },
  {
    "when": "watchExpressionsFocused && !expressionSelected",
    "command": "-debug.removeWatchExpression",
    "key": "cmd+backspace"
  },
  {
    "when": "notificationFocus",
    "command": "-notification.clear",
    "key": "cmd+backspace"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "emacs-mcx.backwardKillWord",
    "key": "cmd+backspace"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "-emacs-mcx.backwardKillWord",
    "key": "alt+backspace"
  },
  {
    "command": "-workbench.action.toggleFullScreen",
    "key": "ctrl+cmd+f"
  },
  {
    "when": "editorTextFocus",
    "command": "emacs-mcx.paredit.forwardSexp",
    "key": "ctrl+cmd+f"
  },
  {
    "when": "editorTextFocus",
    "command": "-emacs-mcx.paredit.forwardSexp",
    "key": "ctrl+alt+f"
  },
  {
    "command": "-workbench.action.switchWindow",
    "key": "ctrl+w"
  },
  {
    "command": "-workbench.view.scm",
    "key": "ctrl+shift+g"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+cmd+space"
  },
  {
    "command": "-workbench.action.toggleSidebarVisibility",
    "key": "ctrl+alt+space"
  },
  {
    "command": "workbench.action.quit",
    "key": "ctrl+x ctrl+c"
  },
  {
    "command": "-workbench.action.quit",
    "key": "cmd+q"
  },
  {
    "when": "editorTextFocus",
    "command": "rewrap.rewrapComment",
    "key": "cmd+q"
  },
  {
    "when": "editorTextFocus",
    "command": "-rewrap.rewrapComment",
    "key": "alt+q"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "editor.action.joinLines",
    "key": "ctrl+cmd+j"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "-editor.action.joinLines",
    "key": "ctrl+j"
  },
  {
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly",
    "command": "-editor.action.triggerSuggest",
    "key": "ctrl+space"
  },
  {
    "when": "editorFocus",
    "command": "emacs-mcx.addSelectionToNextFindMatch",
    "key": "ctrl+shift+."
  },
  {
    "when": "editorFocus",
    "command": "-emacs-mcx.addSelectionToNextFindMatch",
    "key": "ctrl+alt+n"
  },
  {
    "when": "editorFocus",
    "command": "emacs-mcx.addSelectionToPreviousFindMatch",
    "key": "ctrl+shift+,"
  },
  {
    "when": "editorFocus",
    "command": "-emacs-mcx.addSelectionToPreviousFindMatch",
    "key": "ctrl+alt+p"
  },
  {
    "command": "workbench.action.files.saveAll",
    "key": "ctrl+x s"
  },
  {
    "command": "-workbench.action.files.saveAll",
    "key": "alt+cmd+s"
  },
  {
    "when": "textInputFocus && !editorReadonly",
    "command": "-deleteLeft",
    "key": "ctrl+h"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "-emacs-mcx.deleteBackwardChar",
    "key": "ctrl+h"
  },
  {
    "command": "extension.runAllSpecFiles",
    "key": "ctrl+c ctrl+a"
  },
  {
    "command": "-extension.runAllSpecFiles",
    "key": "cmd+r"
  },
  {
    "command": "extension.runFileSpecs",
    "key": "ctrl+c ctrl+v"
  },
  {
    "command": "-extension.runFileSpecs",
    "key": "shift+cmd+t"
  },
  {
    "command": "extension.runLastSpec",
    "key": "ctrl+c ctrl+r"
  },
  {
    "command": "extension.runSpecLine",
    "key": "ctrl+c ctrl+s"
  },
  {
    "when": "editorTextFocus",
    "command": "extension.goToSpec",
    "key": "ctrl+c ctrl+t"
  },
  {
    "when": "editorTextFocus",
    "command": "-extension.goToSpec",
    "key": "shift+cmd+t"
  },
  {
    "command": "workbench.action.navigateBack",
    "key": "ctrl+u ctrl+space"
  },
  {
    "command": "-workbench.action.navigateBack",
    "key": "ctrl+-"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "editor.action.moveLinesUpAction",
    "key": "cmd+up"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "-editor.action.moveLinesUpAction",
    "key": "alt+up"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "editor.action.moveLinesDownAction",
    "key": "cmd+down"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "-editor.action.moveLinesDownAction",
    "key": "alt+down"
  },
  {
    "command": "-workbench.action.files.newUntitledFile",
    "key": "cmd+n"
  },
  {
    "command": "-workbench.action.quickOpen",
    "key": "cmd+p"
  },
  {
    "when": "editorTextFocus && hasWordHighlights",
    "command": "editor.action.wordHighlight.next",
    "key": "cmd+n"
  },
  {
    "when": "editorTextFocus && hasWordHighlights",
    "command": "-editor.action.wordHighlight.next",
    "key": "f7"
  },
  {
    "when": "editorTextFocus && hasWordHighlights",
    "command": "editor.action.wordHighlight.prev",
    "key": "cmd+p"
  },
  {
    "when": "editorTextFocus && hasWordHighlights",
    "command": "-editor.action.wordHighlight.prev",
    "key": "shift+f7"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "editor.action.copyLinesDownAction",
    "key": "ctrl+c d"
  },
  {
    "when": "editorTextFocus && !editorReadonly",
    "command": "-editor.action.copyLinesDownAction",
    "key": "shift+alt+down"
  },
  {
    "when": "editorTextFocus",
    "command": "editor.action.insertCursorBelow",
    "key": "ctrl+shift+="
  },
  {
    "when": "editorTextFocus",
    "command": "-editor.action.insertCursorBelow",
    "key": "alt+cmd+down"
  },
  {
    "when": "editorTextFocus",
    "command": "editor.action.insertCursorAbove",
    "key": "ctrl+shift+-"
  },
  {
    "when": "editorTextFocus",
    "command": "-editor.action.insertCursorAbove",
    "key": "alt+cmd+up"
  },
  {
    "command": "magit.status",
    "key": "ctrl+x g"
  },
  {
    "command": "-magit.status",
    "key": "alt+x g"
  }
]
